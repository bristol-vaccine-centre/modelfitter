% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/configuration.R
\name{configure_models}
\alias{configure_models}
\title{Configure a set of model fits from a specification of different combinations}
\usage{
configure_models(
  model_formula,
  dataset,
  model_function,
  data_subset = data_subset_provider(default = TRUE),
  formula_update = formula_provider(default = . ~ .)
)
}
\arguments{
\item{model_formula}{the model formula or formulae you want to fit as a
\code{formula_provider(...)}.}

\item{dataset}{the dataset imputed or bootstrapped if need be as a
\code{bootstrap_provider(...)} or \code{imputation_provider(...)}}

\item{model_function}{the model functions to fit as a
\code{model_function_provider(...)}}

\item{data_subset}{the data subsets to fit as a \code{data_subset_provider(...)}}

\item{formula_update}{and model formula updates to apply before fitting as a
\code{formula_provider(...)}.}
}
\value{
a configuration dataframe and data provider to run
}
\description{
Configure a set of model fits from a specification of different combinations
}
\examples{

form = ~ bmi + age + chl

fp = formula_provider(
  `Univariate` = modelfitter::univariate_from_multivariate(form),
  `Adj Model 1` = form,
  `Adj Model 2` = update(form, . ~ . - chl),
)

mfp = model_function_provider(
   `Logistic` = modelfitter::logistic_regression,
   `Poisson` = modelfitter::quasi_poisson
)

ip = imputation_provider(
    mice::nhanes2 \%>\% dplyr::mutate(death=TRUE), 10)

fup = formula_provider(
  hypertension = hyp ~ .,
  death = death ~ .
)

dsp = data_subset_provider(
  all = TRUE,
  hypertensives = hyp == "yes",
  nonhypertensives = hyp == "no" 
)

tmp = configure_models(fp, ip, mfp, dsp, fup) \%>\% dplyr::glimpse()

# the number of models to fit will be this:
sum(tmp$n_boots)

}
