[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 modelfitter authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Robert Challen. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Challen R (2023). modelfitter: Bootstrapping models model fits. R package version 0.0.0.9027, https://github.com/bristol-vaccine-centre/modelfitter.","code":"@Manual{,   title = {modelfitter: Bootstrapping models and model fits},   author = {Robert Challen},   year = {2023},   note = {R package version 0.0.0.9027},   url = {https://github.com/bristol-vaccine-centre/modelfitter}, }"},{"path":"/index.html","id":"modelfitter-impute-data-fit-standardised-models-and-present-results","dir":"","previous_headings":"","what":"Bootstrapping models and model fits","title":"Bootstrapping models and model fits","text":"package impute data, fit models, combine bootstraps draw forest plots","code":""},{"path":[]},{"path":"/reference/analyse_performance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performance metrics of bootstrapped models — analyse_performance","text":"","code":"analyse_performance(   boots,   statistics = c(\"AIC\", \"BIC\", \"R2_Tjur\", \"R2_Nagelkerke\", \"RMSE\", \"Sigma\") )"},{"path":"/reference/analyse_performance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Performance metrics of bootstrapped models — analyse_performance","text":"boots bootstrapped model output statistics model performance statistics","code":""},{"path":"/reference/analyse_performance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Performance metrics of bootstrapped models — analyse_performance","text":"printable summary","code":""},{"path":"/reference/analyse_performance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Performance metrics of bootstrapped models — analyse_performance","text":"","code":"# pooled = boots %>% summarise_boots() #  pooled %>% ggrrr::hux_tidy( #    rowGroupVars = dplyr::vars(statistic), #    colGroupVars = dplyr::vars(modelName) #  )"},{"path":"/reference/as_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","title":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","text":"Reuse tidy-select syntax outside tidy-select function","code":""},{"path":"/reference/as_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","text":"","code":"as_vars(tidyselect, data = NULL)"},{"path":"/reference/as_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","text":"tidyselect tidyselect syntax evaluated context looking call call stack includes dataframe first argument data (optional) specific dataframe evaluate tidyselect","code":""},{"path":"/reference/as_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reuse tidy-select syntax outside of a tidy-select function — as_vars","text":"list symbols resulting evaluation tidyselect context current call stack (provided data frame)","code":""},{"path":"/reference/bootstrap_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a access to bootstrap resamples of a dataset — bootstrap_provider","title":"Provide a access to bootstrap resamples of a dataset — bootstrap_provider","text":"Provide access bootstrap resamples dataset","code":""},{"path":"/reference/bootstrap_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a access to bootstrap resamples of a dataset — bootstrap_provider","text":"","code":"bootstrap_provider(data, max_n, formulae = ~.)"},{"path":"/reference/bootstrap_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a access to bootstrap resamples of a dataset — bootstrap_provider","text":"data data frame max_n maximum number different bootstraps formulae list formulae columns used","code":""},{"path":"/reference/bootstrap_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a access to bootstrap resamples of a dataset — bootstrap_provider","text":"function returns dataset inputs 1:max_n","code":""},{"path":"/reference/bootstrap_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide a access to bootstrap resamples of a dataset — bootstrap_provider","text":"","code":"bp = iris %>% bootstrap_provider(10) bp(1) %>% head() #>   Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1          5.8         2.7          4.1         1.0 versicolor #> 2          6.4         2.8          5.6         2.1  virginica #> 3          4.4         3.2          1.3         0.2     setosa #> 4          4.3         3.0          1.1         0.1     setosa #> 5          7.0         3.2          4.7         1.4 versicolor #> 6          5.4         3.0          4.5         1.5 versicolor tmp = bp(1) tmp2 = bp(1) identical(tmp,tmp2) #> [1] TRUE"},{"path":[]},{"path":"/reference/combine_boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine bootstraps — combine_boots","text":"","code":"combine_boots(boots, ..., inv_link = exp)"},{"path":"/reference/combine_boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine bootstraps — combine_boots","text":"boots bootstrapped model output ... columns using predictors, list formulae (rhs), tidyselect call, dplyr::vars() specification list characters","code":""},{"path":"/reference/combine_boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine bootstraps — combine_boots","text":"collapsed summary bootstraps","code":""},{"path":"/reference/combine_boots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine bootstraps — combine_boots","text":"","code":"# boots = iris %>% run_model(Petal.Length ~ Species + Petal.Width, stats::lm) # combine_boots(boots,  inv_link = ~ .x)"},{"path":"/reference/configure_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure a single model fit using the modelfitter framework — configure_model","title":"Configure a single model fit using the modelfitter framework — configure_model","text":"Configure single model fit using modelfitter framework","code":""},{"path":"/reference/configure_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure a single model fit using the modelfitter framework — configure_model","text":"","code":"configure_model(model_name, model_formula, dataset, model_function)"},{"path":"/reference/configure_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure a single model fit using the modelfitter framework — configure_model","text":"model_name label model model_formula model formula want fit dataset dataset model_function model function fit, e.g. logistic_regression","code":""},{"path":"/reference/configure_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure a single model fit using the modelfitter framework — configure_model","text":"configuration dataframe data provider execute fit ","code":""},{"path":"/reference/configure_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure a single model fit using the modelfitter framework — configure_model","text":"","code":"# Simple example tmp = configure_model(   \"Iris model\",    I(Species == \"versicolor\") ~ .,    iris,    modelfitter::logistic_regression ) tmp2 = tmp %>% execute_configuration() #> caching item: ~/.cache/modelfitter/cached-7ee20ca4c523103b2fe5534cbeca6990-b13f96d3d80212bad30c154f18762414.rda summfit = tmp2 %>% summarise_fits()"},{"path":"/reference/configure_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Configure a set of model fits from a specification of different combinations — configure_models","title":"Configure a set of model fits from a specification of different combinations — configure_models","text":"Configure set model fits specification different combinations","code":""},{"path":"/reference/configure_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Configure a set of model fits from a specification of different combinations — configure_models","text":"","code":"configure_models(   model_formula,   dataset,   model_function,   data_subset = data_subset_provider(default = TRUE),   formula_update = formula_provider(default = . ~ .) )"},{"path":"/reference/configure_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Configure a set of model fits from a specification of different combinations — configure_models","text":"model_formula model formula formulae want fit formula_provider(...). dataset dataset imputed bootstrapped need bootstrap_provider(...) imputation_provider(...) model_function model functions fit model_function_provider(...) data_subset data subsets fit data_subset_provider(...) formula_update model formula updates apply fitting formula_provider(...).","code":""},{"path":"/reference/configure_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Configure a set of model fits from a specification of different combinations — configure_models","text":"configuration dataframe data provider run","code":""},{"path":"/reference/configure_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Configure a set of model fits from a specification of different combinations — configure_models","text":"","code":"form = ~ bmi + age + chl  fp = formula_provider(   `Univariate` = modelfitter::univariate_from_multivariate(form),   `Adj Model 1` = form,   `Adj Model 2` = update(form, . ~ . - chl), )  mfp = model_function_provider(    `Logistic` = modelfitter::logistic_regression,    `Poisson` = modelfitter::quasi_poisson )  ip = imputation_provider(     mice::nhanes2 %>% dplyr::mutate(death=TRUE), 10) #> using cached item: ~/.cache/modelfitter/cached-d485da4f27080dab75135297c7bda544-a41a192ca85a1a7696bcd194f044c399.rda  fup = formula_provider(   hypertension = hyp ~ .,   death = death ~ . )  dsp = data_subset_provider(   all = TRUE,   hypertensives = hyp == \"yes\",   nonhypertensives = hyp == \"no\"  )  tmp = configure_models(fp, ip, mfp, dsp, fup) %>% dplyr::glimpse() #> Rows: 60 #> Columns: 9 #> $ model_base_name   <chr> \"Adj Model 1\", \"Adj Model 1\", \"Adj Model 1\", \"Adj Mo… #> $ model_type_name   <chr> \"Logistic\", \"Logistic\", \"Logistic\", \"Logistic\", \"Log… #> $ data_subset_name  <chr> \"all\", \"all\", \"hypertensives\", \"hypertensives\", \"non… #> $ model_update_name <chr> \"death\", \"hypertension\", \"death\", \"hypertension\", \"d… #> $ data_subset_fn    <list> function (data) , data %>% dplyr::ungroup() %>% dpl… #> $ model_fn          <list> function (data, formula, positive = c(\"yes\", \"true\"… #> $ n_boots           <int> 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10, … #> $ model_formula     <list> <death ~ bmi + age + chl>, <hyp ~ bmi + age + chl>,… #> $ model_name        <chr> \"Adj Model 1 (death)\\nLogistic\", \"Adj Model 1 (hyper…  # the number of models to fit will be this: sum(tmp$n_boots) #> [1] 600"},{"path":"/reference/cox_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit standard cox model. — cox_model","title":"Fit standard cox model. — cox_model","text":"Fit standard cox model.","code":""},{"path":"/reference/cox_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit standard cox model. — cox_model","text":"","code":"cox_model(data, formula, ...)"},{"path":"/reference/cox_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit standard cox model. — cox_model","text":"data data frame formula formula form survival::Surv(time, event) ~ obs1 + obs2 + ... ... used","code":""},{"path":"/reference/cox_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit standard cox model. — cox_model","text":"model object","code":""},{"path":"/reference/data_subset_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a mechanism for subsetting data — data_subset_provider","title":"Provide a mechanism for subsetting data — data_subset_provider","text":"data subset may used sensitivity analysis. provides mechanism filter data within pipeline.","code":""},{"path":"/reference/data_subset_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a mechanism for subsetting data — data_subset_provider","text":"","code":"data_subset_provider(...)"},{"path":"/reference/data_subset_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a mechanism for subsetting data — data_subset_provider","text":"... set named data filter criteria. cases want include default = TRUE option list. (default value)","code":""},{"path":"/reference/data_subset_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a mechanism for subsetting data — data_subset_provider","text":"data subset provider can fiter data based named set subset criteria","code":""},{"path":"/reference/data_subset_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide a mechanism for subsetting data — data_subset_provider","text":"","code":"dsp = data_subset_provider(one = TRUE, two = Species == \"versicolor\", three = Sepal.Width < 2.6) dsp() #> [1] \"one\"   \"two\"   \"three\" f = dsp(\"three\") f(iris)  #>    Sepal.Length Sepal.Width Petal.Length Petal.Width    Species #> 1           4.5         2.3          1.3         0.3     setosa #> 2           5.5         2.3          4.0         1.3 versicolor #> 3           4.9         2.4          3.3         1.0 versicolor #> 4           5.0         2.0          3.5         1.0 versicolor #> 5           6.0         2.2          4.0         1.0 versicolor #> 6           6.2         2.2          4.5         1.5 versicolor #> 7           5.6         2.5          3.9         1.1 versicolor #> 8           6.3         2.5          4.9         1.5 versicolor #> 9           5.5         2.4          3.8         1.1 versicolor #> 10          5.5         2.4          3.7         1.0 versicolor #> 11          6.3         2.3          4.4         1.3 versicolor #> 12          5.5         2.5          4.0         1.3 versicolor #> 13          5.0         2.3          3.3         1.0 versicolor #> 14          5.1         2.5          3.0         1.1 versicolor #> 15          4.9         2.5          4.5         1.7  virginica #> 16          6.7         2.5          5.8         1.8  virginica #> 17          5.7         2.5          5.0         2.0  virginica #> 18          6.0         2.2          5.0         1.5  virginica #> 19          6.3         2.5          5.0         1.9  virginica  dsp2 = data_subset_provider() dsp2(\"default\")(mtcars) %>% head(10) #>                    mpg cyl  disp  hp drat    wt  qsec vs am gear carb #> Mazda RX4         21.0   6 160.0 110 3.90 2.620 16.46  0  1    4    4 #> Mazda RX4 Wag     21.0   6 160.0 110 3.90 2.875 17.02  0  1    4    4 #> Datsun 710        22.8   4 108.0  93 3.85 2.320 18.61  1  1    4    1 #> Hornet 4 Drive    21.4   6 258.0 110 3.08 3.215 19.44  1  0    3    1 #> Hornet Sportabout 18.7   8 360.0 175 3.15 3.440 17.02  0  0    3    2 #> Valiant           18.1   6 225.0 105 2.76 3.460 20.22  1  0    3    1 #> Duster 360        14.3   8 360.0 245 3.21 3.570 15.84  0  0    3    4 #> Merc 240D         24.4   4 146.7  62 3.69 3.190 20.00  1  0    4    2 #> Merc 230          22.8   4 140.8  95 3.92 3.150 22.90  1  0    4    2 #> Merc 280          19.2   6 167.6 123 3.92 3.440 18.30  1  0    4    4"},{"path":"/reference/dot-cache_clear.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"Clear data passthrough cache complex long running operations","code":""},{"path":"/reference/dot-cache_clear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"","code":".cache_clear(   .cache = rappdirs::user_cache_dir(utils::packageName()),   .prefix = \".*\",   interactive = TRUE )"},{"path":"/reference/dot-cache_clear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":".cache location cache directory. May get value options(\"ggrrr.cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix regular expression matching prefix cached item, selective clean operations. defaults everything. interactive suppress sure? warning FALSE value (defaults TRUE)","code":""},{"path":"/reference/dot-cache_clear.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear data from the passthrough cache for complex or long running operations — .cache_clear","text":"nothing. called side effects","code":""},{"path":"/reference/dot-cache_delete_stale.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete stale files in a cache — .cache_delete_stale","title":"Delete stale files in a cache — .cache_delete_stale","text":"Staleness determined number days 2am current day current time-zone. item cached one day becomes stale 2am day cached. time configurable option(cache.time_day_starts = 0) midnight. Automated analysis using caches updated data ensure analysis cross time point otherwise may end using old data.","code":""},{"path":"/reference/dot-cache_delete_stale.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete stale files in a cache — .cache_delete_stale","text":"","code":".cache_delete_stale(   .cache = rappdirs::user_cache_dir(utils::packageName()),   .prefix = \".*\",   .stale = Inf )"},{"path":"/reference/dot-cache_delete_stale.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete stale files in a cache — .cache_delete_stale","text":".cache location cache directory. May get value options(\"cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix name operation can namespace cached files selective clean operations .stale length time days keep cached data considering stale.","code":""},{"path":"/reference/dot-cache_delete_stale.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete stale files in a cache — .cache_delete_stale","text":"nothing. called side effects.","code":""},{"path":"/reference/dot-cache_download.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a file into a local cache. — .cache_download","title":"Download a file into a local cache. — .cache_download","text":"function copies remote file local cache makes sure reused.","code":""},{"path":"/reference/dot-cache_download.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a file into a local cache. — .cache_download","text":"","code":".cache_download(   url,   ...,   .nocache = getOption(\"cache.disable\", default = FALSE),   .cache = rappdirs::user_cache_dir(utils::packageName()),   .stale = Inf,   .extn = NULL )"},{"path":"/reference/dot-cache_download.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a file into a local cache. — .cache_download","text":"url url download ... Arguments passed utils::download.file destfile character string (vector, see url     argument) file path downloaded file     saved.  Tilde-expansion performed. method Method used downloading files.  Current     download methods \"internal\", \"libcurl\",     \"wget\", \"curl\" \"wininet\" (Windows     ), value \"auto\": see ‘Details’     ‘Note’. method can also set option     \"download.file.method\": see options(). quiet TRUE, suppress status messages (),     progress bar. mode character.  mode write file.  Useful     values \"w\", \"wb\" (binary), \"\" (append)     \"ab\".  used methods \"wget\" \"curl\".     See also ‘Details’, notably using \"wb\" Windows. cacheOK logical.  server-side cached value acceptable? extra character vector additional command-line arguments     \"wget\" \"curl\" methods. headers named character vector additional HTTP headers     use HTTP[S] requests.  ignored non-HTTP[S] URLs.      User-Agent header taken HTTPUserAgent option     (see options) automatically used first header. .nocache set TRUE caching disabled .cache location downloaded files .stale long leave file replacing . .extn file name extension","code":""},{"path":"/reference/dot-cache_download.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a file into a local cache. — .cache_download","text":"path downloaded file","code":""},{"path":"/reference/dot-cached.html","id":null,"dir":"Reference","previous_headings":"","what":"A simple pass-through cache for complex or long running operations — .cached","title":"A simple pass-through cache for complex or long running operations — .cached","text":"executes expr saves output RDS file indexed code expr hash input variables (contain variable inputs)","code":""},{"path":"/reference/dot-cached.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A simple pass-through cache for complex or long running operations — .cached","text":"","code":".cached(   .expr,   ...,   .nocache = getOption(\"cache.disable\", default = FALSE),   .cache = rappdirs::user_cache_dir(utils::packageName()),   .prefix = \"cached\",   .stale = Inf )"},{"path":"/reference/dot-cached.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A simple pass-through cache for complex or long running operations — .cached","text":".expr code output requires caching. return value create side effects change global variables. ... inputs code expr depends changes require code re-running, Sys.Date() .nocache option defeat caching can set globally options(\"cache.disable\"=TRUE) .cache location cache directory. May get value options(\"cache.dir\") default value rappdirs::user_cache_dir(\"ggrrr\") .prefix name operation can namespace cached files selective clean operations .stale length time days keep cached data considering stale. can also set options(\"cache.stale\")","code":""},{"path":"/reference/dot-cached.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A simple pass-through cache for complex or long running operations — .cached","text":"output .expr usually value","code":""},{"path":"/reference/dot-gg_hide_X_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide the x axis of a plot — .gg_hide_X_axis","title":"Hide the x axis of a plot — .gg_hide_X_axis","text":"Hide x axis plot","code":""},{"path":"/reference/dot-gg_hide_X_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide the x axis of a plot — .gg_hide_X_axis","text":"","code":".gg_hide_X_axis()"},{"path":"/reference/dot-gg_hide_X_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hide the x axis of a plot — .gg_hide_X_axis","text":"theme","code":""},{"path":"/reference/dot-gg_hide_Y_axis.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide the y axis of a plot — .gg_hide_Y_axis","title":"Hide the y axis of a plot — .gg_hide_Y_axis","text":"Hide y axis plot","code":""},{"path":"/reference/dot-gg_hide_Y_axis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide the y axis of a plot — .gg_hide_Y_axis","text":"","code":".gg_hide_Y_axis()"},{"path":"/reference/dot-gg_hide_Y_axis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hide the y axis of a plot — .gg_hide_Y_axis","text":"theme","code":""},{"path":"/reference/dot-gg_hide_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Hide the legend of a plot — .gg_hide_legend","title":"Hide the legend of a plot — .gg_hide_legend","text":"Hide legend plot","code":""},{"path":"/reference/dot-gg_hide_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hide the legend of a plot — .gg_hide_legend","text":"","code":".gg_hide_legend()"},{"path":"/reference/dot-gg_hide_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hide the legend of a plot — .gg_hide_legend","text":"theme","code":""},{"path":"/reference/dot-gg_label_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a label size from points to ggplot units — .gg_label_size","title":"Convert a label size from points to ggplot units — .gg_label_size","text":"Labels like geom_text random unit size mysteriously connected size text axes","code":""},{"path":"/reference/dot-gg_label_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a label size from points to ggplot units — .gg_label_size","text":"","code":".gg_label_size(pts)"},{"path":"/reference/dot-gg_label_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a label size from points to ggplot units — .gg_label_size","text":"pts label size points","code":""},{"path":"/reference/dot-gg_narrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a plot narrower — .gg_narrow","title":"Make a plot narrower — .gg_narrow","text":"Make plot narrower","code":""},{"path":"/reference/dot-gg_narrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a plot narrower — .gg_narrow","text":"","code":".gg_narrow(ang = 90)"},{"path":"/reference/dot-gg_narrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a plot narrower — .gg_narrow","text":"ang angle x labels","code":""},{"path":"/reference/dot-gg_narrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a plot narrower — .gg_narrow","text":"theme","code":""},{"path":"/reference/dot-gg_resize_legend.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the legend smaller — .gg_resize_legend","title":"Make the legend smaller — .gg_resize_legend","text":"Make legend smaller","code":""},{"path":"/reference/dot-gg_resize_legend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the legend smaller — .gg_resize_legend","text":"","code":".gg_resize_legend(pointSize = 0.75, textSize = 6, spaceLegend = 0.75)"},{"path":"/reference/dot-gg_resize_legend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the legend smaller — .gg_resize_legend","text":"pointSize ggplot size lines points textSize size pts text spaceLegend degree spacing items scale (defines overall size)","code":""},{"path":"/reference/dot-gg_resize_legend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make the legend smaller — .gg_resize_legend","text":"theme","code":""},{"path":"/reference/dot-gg_set_X_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the angle of the x axis labels of a plot — .gg_set_X_angle","title":"Set the angle of the x axis labels of a plot — .gg_set_X_angle","text":"Set angle x axis labels plot","code":""},{"path":"/reference/dot-gg_set_X_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the angle of the x axis labels of a plot — .gg_set_X_angle","text":"","code":".gg_set_X_angle(ang = 60)"},{"path":"/reference/dot-gg_set_X_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the angle of the x axis labels of a plot — .gg_set_X_angle","text":"ang angle x labels","code":""},{"path":"/reference/dot-gg_set_X_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the angle of the x axis labels of a plot — .gg_set_X_angle","text":"theme","code":""},{"path":"/reference/exact_logistic_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit exact logistic regression — exact_logistic_regression","title":"Fit exact logistic regression — exact_logistic_regression","text":"Fit exact logistic regression","code":""},{"path":"/reference/exact_logistic_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit exact logistic regression — exact_logistic_regression","text":"","code":"exact_logistic_regression(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/exact_logistic_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit exact logistic regression — exact_logistic_regression","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/exact_logistic_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit exact logistic regression — exact_logistic_regression","text":"model object","code":""},{"path":"/reference/execute_configuration.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit statistical models defined in a modelfitter configuration — execute_configuration","title":"Fit statistical models defined in a modelfitter configuration — execute_configuration","text":"Fit statistical models defined modelfitter configuration","code":""},{"path":"/reference/execute_configuration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit statistical models defined in a modelfitter configuration — execute_configuration","text":"","code":"execute_configuration(   cfg,   retain_fit = sum(cfg$n_boots) < 50,   performance = TRUE,   ...,   cache = FALSE )"},{"path":"/reference/execute_configuration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit statistical models defined in a modelfitter configuration — execute_configuration","text":"cfg 4 column dataframe model_name - minumum model_fn data_subset_fn model_formula retain_fit keep model fit object? config results less 50 models default TRUE. Otherwise summarise models go saving memory. performance calculate performance metrics models. summarised bootstrap replicates. Setting false may good idea lots models. ... Arguments passed model_labels model model list models. label_fn function allows predictor label renamed. expect vector return vector length. Levels terms model function may column names, combinations thereof subgroup_label_fn function allows subgroup label renamed. expect vector return vector length. input function either factor level name combination whatever else model decides name coefficients. cache cache model output","code":""},{"path":"/reference/execute_configuration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit statistical models defined in a modelfitter configuration — execute_configuration","text":"5 column dataframe additional nested fitted results model_fit. nested dataframe columns: boot - id data bootstrap imputation; fit (optional) - model fit ; coef model coefficients; global_p global p values model (see global_p_value()); performance (optional) performance metrics model;","code":""},{"path":"/reference/execute_configuration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit statistical models defined in a modelfitter configuration — execute_configuration","text":"","code":"tmp = configure_model(   \"Iris\", I(Species == \"versicolor\") ~ ., iris, logistic_regression) tmp2 = tmp %>% execute_configuration() #> caching item: ~/.cache/modelfitter/cached-7ee20ca4c523103b2fe5534cbeca6990-81eb709f281fe75d1a492a891145bf7b.rda   tmp3  = configure_models(    formula_provider(       \"<F\" = I(color < \"F\") ~ cut + carat + clarity + price,       \"<H\" = I(color < \"H\") ~ cut + carat + clarity + price    ),    bootstrap_provider(ggplot2::diamonds, max_n = 10),    model_function_provider(      \"Log reg\" = modelfitter::logistic_regression,      \"Poisson\" = modelfitter::quasi_poisson    ) )  tmp4 = tmp3 %>% execute_configuration(cache = TRUE) #> caching item: ~/.cache/modelfitter/cached-7ee20ca4c523103b2fe5534cbeca6990-8e527bf9579174643babc6f473d5732f.rda #> Fitting models ■■■■■                             12% | ETA:  9s #> Fitting models ■■■■■■■■■                         28% | ETA: 23s #> Fitting models ■■■■■■■■■■■■■■■■                  50% | ETA: 10s #> Fitting models ■■■■■■■■■■■■■■■■■                 52% | ETA: 14s #> Fitting models ■■■■■■■■■■■■■■■■■■■■■■■           72% | ETA:  6s #> Fitting models ■■■■■■■■■■■■■■■■■■■■■■■■          78% | ETA:  6s #> Fitting models ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■  100% | ETA:  0s"},{"path":"/reference/f_lhs_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all used variables on LHS of a formula — f_lhs_vars","title":"Get all used variables on LHS of a formula — f_lhs_vars","text":"Get used variables LHS formula","code":""},{"path":"/reference/f_lhs_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all used variables on LHS of a formula — f_lhs_vars","text":"","code":"f_lhs_vars(formula)"},{"path":"/reference/f_lhs_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all used variables on LHS of a formula — f_lhs_vars","text":"formula formula list formulae","code":""},{"path":"/reference/f_lhs_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all used variables on LHS of a formula — f_lhs_vars","text":"variables RHS formulae character vector","code":""},{"path":"/reference/f_lhs_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all used variables on LHS of a formula — f_lhs_vars","text":"","code":"f_lhs_vars(survival::Surv(time,event) ~ x + z + y) #> [1] \"time\"  \"event\""},{"path":"/reference/f_rhs_vars.html","id":null,"dir":"Reference","previous_headings":"","what":"Get all used variables on LHS of a formula — f_rhs_vars","title":"Get all used variables on LHS of a formula — f_rhs_vars","text":"Get used variables LHS formula","code":""},{"path":"/reference/f_rhs_vars.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get all used variables on LHS of a formula — f_rhs_vars","text":"","code":"f_rhs_vars(formula)"},{"path":"/reference/f_rhs_vars.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get all used variables on LHS of a formula — f_rhs_vars","text":"formula formula list formulae","code":""},{"path":"/reference/f_rhs_vars.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get all used variables on LHS of a formula — f_rhs_vars","text":"variables LHS formulae character vector","code":""},{"path":"/reference/f_rhs_vars.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get all used variables on LHS of a formula — f_rhs_vars","text":"","code":"f_rhs_vars(survival::Surv(time,event) ~ x + z +y) #> [1] \"x\" \"z\" \"y\" f_rhs_vars(survival::Surv(time,event) ~ pspline(x) + z + y) #> [1] \"x\" \"z\" \"y\""},{"path":"/reference/format_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a confidence interval — format_ci","title":"Format a confidence interval — format_ci","text":"Format confidence interval","code":""},{"path":"/reference/format_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a confidence interval — format_ci","text":"","code":"format_ci(   median,   lower,   upper,   is_reference_value = FALSE,   fmt.ci = \"%s [%s – %s]\",   na.ci = \"—\",   fn = format_ratio,   ... )"},{"path":"/reference/format_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a confidence interval — format_ci","text":"median median value lower lower value upper upper quantile is_reference_value value reference value fmt.ci layout 3 elements sprintf using %s element na.ci value show median ci NA fn function format number ... Arguments passed format_ratio x vector numbers fmt.ratio sprintf format string max.ratio max ratio display e.g. >50 <0.02 na.ratio symbol case value NA.","code":""},{"path":"/reference/format_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a confidence interval — format_ci","text":"formatted CI string","code":""},{"path":"/reference/format_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a confidence interval — format_ci","text":"","code":"format_ci(   median = 2^(-5:5),   lower = 2^(-5:5-1),   upper = 2^(-5:5+1),   fmt.ratio = \"%1.3g\" ) #>  [1] \"0.0312 [<0.02 – 0.0625]\" \"0.0625 [0.0312 – 0.125]\" #>  [3] \"0.125 [0.0625 – 0.25]\"   \"0.25 [0.125 – 0.5]\"      #>  [5] \"0.5 [0.25 – 1]\"          \"1 [0.5 – 2]\"             #>  [7] \"2 [1 – 4]\"               \"4 [2 – 8]\"               #>  [9] \"8 [4 – 16]\"              \"16 [8 – 32]\"             #> [11] \"32 [16 – >50]\""},{"path":"/reference/format_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a table for a single model output — format_model","title":"Generate a table for a single model output — format_model","text":"modelfitter configuration, execution, summary, format pipeline complex use cases multiple models. simple version single fitted model want print table. less gtsummary .","code":""},{"path":"/reference/format_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a table for a single model output — format_model","text":"","code":"format_model(model_name, fit, statistic, ...)"},{"path":"/reference/format_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a table for a single model output — format_model","text":"model_name title model. fit model fit. statistic type stastic model outputs (e.g. , HR, RR). mostly defines label table. ... Arguments passed format_summary summfit set fitted, summarised configured models global.p present global p value (anova III) rather line line values. inv_link inverse link function employed models. almost always inverse exp(...) unless dealing linear model. col_header glue spec using columns summfit data table label model columns. model_name n_obs_summary defined minimum. bits metadata present table configured using configure_models(...) including model_type_name, data_subset_name, model_base_name, model_update_name, n_boots. row_design glue spec presenting statistic. valid columns reference - referent status, group.type, beta.lower, beta.median, beta.upper, value.lower, value.median, value.upper, p.value.mixture, global.p.mixture, global.p.method. helper functions format_ratio(x,fmt.ratio = \"%1.3g\") format_ci(med,low,hi,ref) may useful glue string p_format function (lambda) converting number p-value string font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"tableone.hide_footer\"=TRUE)). summarise_fn event want present multiple models column table possible multiple entries variable. function combine (text level) can placed table. Examples dplyr::first ~ paste0(.x,collapse=\"\\n\")","code":""},{"path":"/reference/format_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a table for a single model output — format_model","text":"huxtable formatted model summary table","code":""},{"path":"/reference/format_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a table for a single model output — format_model","text":"","code":"coxfit = cox_model(survival::flchain, survival::Surv(futime, death) ~ sex * age) format_model(\"FLChain\", coxfit, \"HR\") #> Warning: Quosure lists can't be concatenated with objects other than quosures as of #> rlang 0.3.0. Please call `as.list()` on the quosure list first. #> This warning is displayed once every 8 hours. #>            ───────────────────────────────────────────────────────── #>                                          FLChain (N=2169)            #>              Characteristic   Subgroup   HR [95% CI]       P value   #>            ───────────────────────────────────────────────────────── #>              sex              F          ref               <0.001    #>                               M          2.5 [1.3 – 4.7]             #>            ───────────────────────────────────────────────────────── #>              age                         1.1 [1.1 – 1.1]   <0.001    #>            ───────────────────────────────────────────────────────── #>              sex & age        F:age      —                 0.116     #>                               M:age      0.99 [0.98 – 1]             #>            ───────────────────────────────────────────────────────── #>              P values calculated using Likelihood ratio              #>              test (II)                                               #>  #> Column names: Characteristic, Subgroup, 1, P value"},{"path":"/reference/format_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a ratio, truncating at a set level above and below 1 on log scale. — format_ratio","title":"Format a ratio, truncating at a set level above and below 1 on log scale. — format_ratio","text":"Format ratio, truncating set level 1 log scale.","code":""},{"path":"/reference/format_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a ratio, truncating at a set level above and below 1 on log scale. — format_ratio","text":"","code":"format_ratio(x, fmt.ratio = \"%1.2f\", max.ratio = 50, na.ratio = \"Unk\")"},{"path":"/reference/format_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a ratio, truncating at a set level above and below 1 on log scale. — format_ratio","text":"x vector numbers fmt.ratio sprintf format string max.ratio max ratio display e.g. >50 <0.02 na.ratio symbol case value NA.","code":""},{"path":"/reference/format_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a ratio, truncating at a set level above and below 1 on log scale. — format_ratio","text":"string formatted ratios","code":""},{"path":"/reference/format_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a ratio, truncating at a set level above and below 1 on log scale. — format_ratio","text":"","code":"format_ratio(2^(-6:6)) #>  [1] \"<0.02\"  \"0.03\"   \"0.06\"   \"0.12\"   \"0.25\"   \"0.50\"   \"1.00\"   \"2.00\"   #>  [9] \"4.00\"   \"8.00\"   \"16.00\"  \"32.00\"  \">50.00\""},{"path":"/reference/format_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Format a summary of multiple fits into a table. — format_summary","title":"Format a summary of multiple fits into a table. — format_summary","text":"Format summary multiple fits table.","code":""},{"path":"/reference/format_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format a summary of multiple fits into a table. — format_summary","text":"","code":"format_summary(   summfit,   ...,   statistic = \"OR\",   global.p = getOption(\"modelfitter.global_p_values\", TRUE),   inv_link = exp,   col_header = \"{model_name} (N={sprintf('%d',max(n_obs_summary))})\",   row_design =     \"{format_ci(value.median,value.lower,value.upper,reference,fmt.ratio = '%1.2g')}\",   p_format = NULL,   font_size = getOption(\"modelfitter.font_size\", 8),   font = getOption(\"modelfitter.font\", \"Arial\"),   footer_text = NULL,   summarise_fn = NULL )"},{"path":"/reference/format_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format a summary of multiple fits into a table. — format_summary","text":"summfit set fitted, summarised configured models ... Arguments passed model_labels model model list models. label_fn function allows predictor label renamed. expect vector return vector length. Levels terms model function may column names, combinations thereof subgroup_label_fn function allows subgroup label renamed. expect vector return vector length. input function either factor level name combination whatever else model decides name coefficients. statistic model output table presenting? , RR HR? something else? global.p present global p value (anova III) rather line line values. inv_link inverse link function employed models. almost always inverse exp(...) unless dealing linear model. col_header glue spec using columns summfit data table label model columns. model_name n_obs_summary defined minimum. bits metadata present table configured using configure_models(...) including model_type_name, data_subset_name, model_base_name, model_update_name, n_boots. row_design glue spec presenting statistic. valid columns reference - referent status, group.type, beta.lower, beta.median, beta.upper, value.lower, value.median, value.upper, p.value.mixture, global.p.mixture, global.p.method. helper functions format_ratio(x,fmt.ratio = \"%1.3g\") format_ci(med,low,hi,ref) may useful glue string p_format function (lambda) converting number p-value string font_size (optional) font size table points font (optional) font family table (matched closest system) footer_text text needs added end table, setting FALSE dsables whole footer (options(\"tableone.hide_footer\"=TRUE)). summarise_fn event want present multiple models column table possible multiple entries variable. function combine (text level) can placed table. Examples dplyr::first ~ paste0(.x,collapse=\"\\n\")","code":""},{"path":"/reference/format_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format a summary of multiple fits into a table. — format_summary","text":"huxtable tabular output model(s)","code":""},{"path":"/reference/format_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format a summary of multiple fits into a table. — format_summary","text":"","code":"cfg  = configure_models(    formula_provider(       \"<F\" = I(color < \"F\") ~ cut + carat + clarity + price,       \"<H\" = I(color < \"H\") ~ cut + carat + clarity + price    ),    bootstrap_provider(ggplot2::diamonds, max_n = 10),    model_function_provider(      \"Log reg\" = modelfitter::logistic_regression,      \"Poisson\" = modelfitter::quasi_poisson    ) )  exectn = cfg %>% execute_configuration(cache = TRUE) #> using cached item: ~/.cache/modelfitter/cached-7ee20ca4c523103b2fe5534cbeca6990-8e527bf9579174643babc6f473d5732f.rda summfit = exectn %>% summarise_fits() hux = summfit %>% format_summary() hux #>   ──────────────────────────────────────────────────────────────────────────── #>                           <F                   <F                   <H         #>                           Log reg              Poisson              Log reg    #>                           (N=53940)            (N=53940)            (N=53940   #>                                                                     )          #>     Characte   Subgroup   OR [95%    P value   OR [95%    P value   OR [95%    #>     ristic                CI]                  CI]                  CI]        #>   ──────────────────────────────────────────────────────────────────────────── #>     cut        Fair       ref        <0.001    ref        <0.001    ref        #>                Good       0.98                 0.98                 0.66       #>                           [0.81 –              [0.87 –              [0.54 –    #>                           1.2]                 1.1]                 0.83]      #>                Very       0.93                 0.96                 0.55       #>                Good       [0.79 –              [0.86 –              [0.43 –    #>                           1.1]                 1.1]                 0.66]      #>                Premium    0.75                 0.84                 0.52       #>                           [0.64 –              [0.75 –              [0.43 –    #>                           0.9]                 0.94]                0.65]      #>                Ideal      0.79                 0.87                 0.46       #>                           [0.67 –              [0.78 –              [0.38 –    #>                           0.92]                0.96]                0.56]      #>   ──────────────────────────────────────────────────────────────────────────── #>     carat                 <0.02      <0.001    0.03       <0.001    <0.02      #>                           [<0.02 –             [0.027 –             [<0.02 –   #>                           <0.02]               0.033]               <0.02]     #>   ──────────────────────────────────────────────────────────────────────────── #>     clarity    I1         ref        <0.001    ref        <0.001    ref        #>                SI2        0.79                 0.91                 0.17       #>                           [0.57 –              [0.75 –              [0.11 –    #>                           1]                   1.1]                 0.26]      #>                SI1        0.4                  0.63                 0.049      #>                           [0.29 –              [0.51 –              [0.032 –   #>                           0.53]                0.75]                0.077]     #>                VS2        0.25                 0.48                 0.032      #>                           [0.18 –              [0.4 –               [0.02 –    #>                           0.33]                0.58]                0.051]     #>                VS1        0.13                 0.32                 <0.02      #>                           [0.093 –             [0.26 –              [<0.02 –   #>                           0.17]                0.38]                0.033]     #>                VVS2       0.12                 0.31                 <0.02      #>                           [0.086 –             [0.25 –              [<0.02 –   #>                           0.16]                0.37]                0.033]     #>                VVS1       0.077                0.23                 <0.02      #>                           [0.057 –             [0.19 –              [<0.02 –   #>                           0.1]                 0.28]                <0.02]     #>                IF         0.026                0.097                <0.02      #>                           [<0.02 –             [0.077 –             [<0.02 –   #>                           0.037]               0.12]                <0.02]     #>   ──────────────────────────────────────────────────────────────────────────── #>     price                 1 [1 –     <0.001    1 [1 –     <0.001    1 [1 –     #>                           1]                   1]                   1]         #>   ──────────────────────────────────────────────────────────────────────────── #>     P values calculated using Likelihood ratio test (II)                       #>  #> Column names: Characteristic, Subgroup, 1, P value, 1.1, P value.1, 1.2, P #> value.2, 1.3, P value.3 #>  #> 7/10 columns shown."},{"path":[]},{"path":"/reference/format_summary_rows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict the potential coefficient names for a model output — format_summary_rows","text":"","code":"format_summary_rows(rawData, ..., label_fn = ~.x)"},{"path":"/reference/format_summary_rows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict the potential coefficient names for a model output — format_summary_rows","text":"rawData modelfit dataframe(s) ... columns using predictors, list formulae (rhs), tidyselect call, dplyr::vars() specification list characters label_fn function converts column names readable labels","code":""},{"path":"/reference/format_summary_rows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict the potential coefficient names for a model output — format_summary_rows","text":"dataframe likely names coefficients model can joined model coefficients ","code":""},{"path":"/reference/format_summary_rows.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Predict the potential coefficient names for a model output — format_summary_rows","text":"","code":"# Disabling this example as function deprecated if (FALSE) {  boot = run_model(   ggplot2::diamonds %>% dplyr::mutate(cut = factor(cut, ordered=FALSE)),    price ~ .,    stats::lm ) tmp = format_summary_rows(boot)    # logistic regression (OR) diamonds2 = ggplot2::diamonds %>% dplyr::mutate(    is_coloured = color <= \"F\",    dplyr::across(dplyr::where(is.ordered), ~ factor(.x,ordered=FALSE)) ) %>% dplyr::select(-color)  format_summary_rows(diamonds2, is_coloured ~ cut + carat + clarity*price) model = logistic_regression(diamonds2, is_coloured ~ cut + carat + clarity * price) model = logistic_regression(diamonds2, is_coloured ~ cut + I(cut==\"D\") + clarity*price)  stats::coef(model) }"},{"path":"/reference/formula_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a configuration for multiple formulae — formula_provider","title":"Construct a configuration for multiple formulae — formula_provider","text":"multiple formulae parameterised model fitting pipeline. Different models may key part analysis sensitivity. single name maybe associated one many models - frequent want group together models univariate comparisons format table another single multivarible model. Another use case multiple models single set predictors","code":""},{"path":"/reference/formula_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a configuration for multiple formulae — formula_provider","text":"","code":"formula_provider(...)"},{"path":"/reference/formula_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a configuration for multiple formulae — formula_provider","text":"... named list formulae formulae lists. simplest use case single formula, see examples possibilities.","code":""},{"path":"/reference/formula_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a configuration for multiple formulae — formula_provider","text":"","code":"form = is_coloured ~ cut + carat + clarity * price fp = formula_provider(   `Univariate` = modelfitter::univariate_from_multivariate(form),   `Adj Model 1` = form,   `Adj Model 2` = update(form, . ~ . - clarity * price), )   predictors = ~ x + y + z  fp2 = formula_provider(   `Death` = death ~ .,   `ICU admission` = icu ~ .,   `Delayed discharge` = delayed_discharge ~ ., ) sapply(fp2(), fp2) %>% sapply(update, predictors) #> $Death #> death ~ x + y + z #> <environment: 0x55d29287bda0> #>  #> $`ICU admission` #> icu ~ x + y + z #> <environment: 0x55d29287bda0> #>  #> $`Delayed discharge` #> delayed_discharge ~ x + y + z #> <environment: 0x55d29287bda0> #>   # the simplest configuration fp3 = formula_provider(outcome ~ x + y + z) fp3() #> [1] \"default\"  fp4 = formula_provider(outcome1 ~ x + y + z, outcome2 ~ x + y + z) fp4() #> [1] \"outcome1 ~ x + y + z\" \"outcome2 ~ x + y + z\" try(fp4(\"blah blah\")) #> Error : formula_provider: `blah blah` is not a known index of out: outcome1 ~ x + y + z, outcome2 ~ x + y + z  # must define at least one forumula try(formula_provider()) #> Error : you must supply a model formula.  formula_provider(default = . ~ .) #> function (name)  #> { #>     if (rlang::is_missing(name))  #>         return(names(dots)) #>     tmp = .check_index(dots, name, \"formula_provider\") #>     if (!inherits(tmp, \"list\"))  #>         tmp = list(tmp) #>     return(tmp) #> } #> <bytecode: 0x55d290382958> #> <environment: 0x55d290dc94a8> #> attr(,\"class\") #> [1] \"provider\" \"function\""},{"path":"/reference/global_p_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate a global P-value for a model fit for each of the predictors. — global_p_value","title":"Calculate a global P-value for a model fit for each of the predictors. — global_p_value","text":"summary output model p-value level factors whereas usually want know overall contribution individual predictor model .","code":""},{"path":"/reference/global_p_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate a global P-value for a model fit for each of the predictors. — global_p_value","text":"","code":"global_p_value(x, ...)"},{"path":"/reference/global_p_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate a global P-value for a model fit for each of the predictors. — global_p_value","text":"x model ... used.","code":""},{"path":"/reference/global_p_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate a global P-value for a model fit for each of the predictors. — global_p_value","text":"dataframe predictors model (levels) one column global p value another. global.p given zero one despite really possible. si assumed formatted truncate low high values.","code":""},{"path":"/reference/global_p_value.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate a global P-value for a model fit for each of the predictors. — global_p_value","text":"function usually calculates Type 2 Anova predictors within models sometimes falls back different methods model supported car::Anova stats::anova packages. method used reported output. designed automated process may work situations, produce appropriate output model types. Interaction terms may particularly problematic.","code":""},{"path":"/reference/global_p_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate a global P-value for a model fit for each of the predictors. — global_p_value","text":"","code":"diamonds2 = ggplot2::diamonds %>% dplyr::mutate(    is_coloured = color <= \"F\",    dplyr::across(dplyr::where(is.ordered), ~ factor(.x,ordered=FALSE)) ) %>% dplyr::select(-color)  lmodel = stats::lm(Petal.Width ~ ., iris) glmodel = logistic_regression(diamonds2, is_coloured ~ cut + carat + clarity * price) coxfit = cox_model(survival::flchain, survival::Surv(futime, death) ~ sex * age)  # Error conditions try(anova(stats::lm( cut ~ carat + clarity * price, diamonds2))) #> Warning: using type = \"numeric\" with a factor response will be ignored #> Warning: ‘-’ not meaningful for factors #> Warning: ‘^’ not meaningful for factors #> Error in if (ssr < 1e-10 * mss) warning(\"ANOVA F-tests on an essentially perfect fit are unreliable\") :  #>   missing value where TRUE/FALSE needed global_p_value(stats::lm( cut ~ carat + clarity * price, diamonds2)) #>       predictor global.p          global.p.method #> 1         carat       NA Joint tests (Wald - III) #> 2       clarity       NA Joint tests (Wald - III) #> 4         price       NA Joint tests (Wald - III) #> 3 clarity:price       NA Joint tests (Wald - III)   # cox model global_p_value(coxfit) #> # A tibble: 3 × 3 #>   predictor global.p global.p.method            #>   <chr>        <dbl> <chr>                      #> 1 sex       1.22e-19 Likelihood ratio test (II) #> 2 age       0        Likelihood ratio test (II) #> 3 sex:age   1.16e- 1 Likelihood ratio test (II)  # linear model global_p_value(lmodel) #> # A tibble: 4 × 3 #>   predictor    global.p global.p.method            #>   <chr>           <dbl> <chr>                      #> 1 Sepal.Length 3.89e- 2 Likelihood ratio test (II) #> 2 Sepal.Width  1.20e- 6 Likelihood ratio test (II) #> 3 Petal.Length 1.97e- 6 Likelihood ratio test (II) #> 4 Species      5.14e-10 Likelihood ratio test (II)  # logistic regression (OR) global_p_value(   stats::glm(is_coloured ~ cut + carat + clarity + price, diamonds2,  family=\"binomial\")) #> # A tibble: 4 × 3 #>   predictor global.p global.p.method            #>   <chr>        <dbl> <chr>                      #> 1 cut       1.32e-41 Likelihood ratio test (II) #> 2 carat     0        Likelihood ratio test (II) #> 3 clarity   0        Likelihood ratio test (II) #> 4 price     0        Likelihood ratio test (II) global_p_value(   logistic_regression(diamonds2, is_coloured ~ cut + carat + clarity * price)) #> # A tibble: 5 × 3 #>   predictor     global.p global.p.method            #>   <chr>            <dbl> <chr>                      #> 1 cut           6.14e-53 Likelihood ratio test (II) #> 2 carat         0        Likelihood ratio test (II) #> 3 clarity       0        Likelihood ratio test (II) #> 4 price         0        Likelihood ratio test (II) #> 5 clarity:price 5.77e-94 Likelihood ratio test (II)  # poisson regression (RR) global_p_value(   quasi_poisson(diamonds2, is_coloured ~ cut + carat + clarity * price)) #> # A tibble: 5 × 3 #>   predictor      global.p global.p.method            #>   <chr>             <dbl> <chr>                      #> 1 cut           4.11e- 46 Likelihood ratio test (II) #> 2 carat         0         Likelihood ratio test (II) #> 3 clarity       0         Likelihood ratio test (II) #> 4 price         0         Likelihood ratio test (II) #> 5 clarity:price 2.62e-129 Likelihood ratio test (II) global_p_value(   robust_poisson(diamonds2, is_coloured ~ cut + carat + clarity * price)) #> Coefficient covariances computed by function(m) sandwich::vcovHC(m, type = \"HC1\") #> # A tibble: 5 × 3 #>   predictor      global.p global.p.method             #>   <chr>             <dbl> <chr>                       #> 1 cut           4.54e- 50 Wald Chi-squared test (III) #> 2 carat         0         Wald Chi-squared test (III) #> 3 clarity       0         Wald Chi-squared test (III) #> 4 price         1.40e-213 Wald Chi-squared test (III) #> 5 clarity:price 2.97e-159 Wald Chi-squared test (III) global_p_value(   robust_poisson_2(diamonds2, is_coloured ~ cut + carat + clarity * price)) #>       predictor      global.p          global.p.method #> 1           cut  4.331277e-50 Joint tests (Wald - III) #> 2         carat  0.000000e+00 Joint tests (Wald - III) #> 3       clarity  0.000000e+00 Joint tests (Wald - III) #> 5         price  0.000000e+00 Joint tests (Wald - III) #> 4 clarity:price 2.558588e-159 Joint tests (Wald - III)  # log binomial regression (RR) # TODO: this does not work at the moment as an example as the log_binomial starting value is # a problem global_p_value(   log_binomial(diamonds2, is_coloured ~ cut + carat + clarity + price)) #>   predictor      global.p          global.p.method #> 1       cut  3.094317e-04 Joint tests (Wald - III) #> 2     carat  0.000000e+00 Joint tests (Wald - III) #> 3   clarity 4.301118e-128 Joint tests (Wald - III) #> 4     price  0.000000e+00 Joint tests (Wald - III)  # global_p_value( #  log_binomial_2(diamonds2, is_coloured ~ cut + carat + clarity + price))"},{"path":"/reference/imputation_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide access to missing data imputations — imputation_provider","title":"Provide access to missing data imputations — imputation_provider","text":"Provide access missing data imputations","code":""},{"path":"/reference/imputation_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide access to missing data imputations — imputation_provider","text":"","code":"imputation_provider(data, max_n, formulae = ~., ...)"},{"path":"/reference/imputation_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide access to missing data imputations — imputation_provider","text":"data data frame missing rows max_n maximum number different imputations formulae lit formulae columns used (defaults everything) ... cache control","code":""},{"path":"/reference/imputation_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide access to missing data imputations — imputation_provider","text":"function returns dataset inputs 1:max_n","code":""},{"path":"/reference/imputation_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Provide access to missing data imputations — imputation_provider","text":"","code":"ip = imputation_provider(mice::nhanes2, 10, list(~ hyp + bmi, ~ age + chl)) #> using cached item: ~/.cache/modelfitter/cached-d485da4f27080dab75135297c7bda544-c51c60b92d2c20b893af82b1b69af8e9.rda ip(1) %>% head(10) #>      age  bmi hyp chl #> 1  20-39 33.2  no 229 #> 2  40-59 22.7  no 187 #> 3  20-39 30.1  no 187 #> 4  60-99 22.7 yes 186 #> 5  20-39 20.4  no 113 #> 6  60-99 20.4 yes 184 #> 7  20-39 22.5  no 118 #> 8  20-39 30.1  no 187 #> 9  40-59 22.0  no 238 #> 10 40-59 27.4 yes 238"},{"path":[]},{"path":"/reference/impute_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Take a list of predictors and impute data for those predictors — impute_data","text":"","code":"impute_data(rawData, ..., m = getOption(\"tableone.imputations\", 10))"},{"path":"/reference/impute_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Take a list of predictors and impute data for those predictors — impute_data","text":"rawData raw data frame observations ... columns using predictors, list formulae (rhs), tidyselect call, dplyr::vars() specification list characters m number imputations (default 10)","code":""},{"path":"/reference/impute_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Take a list of predictors and impute data for those predictors — impute_data","text":"mice object containing imputed data","code":""},{"path":"/reference/log_binomial.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit standard log binomial regression using stats::glm — log_binomial","title":"Fit standard log binomial regression using stats::glm — log_binomial","text":"log binomial model using standard glm less satisfactory hard make converge. algorithm needs starting values hope make difference outcome. needs investigation used.","code":""},{"path":"/reference/log_binomial.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit standard log binomial regression using stats::glm — log_binomial","text":"","code":"log_binomial(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/log_binomial.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit standard log binomial regression using stats::glm — log_binomial","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/log_binomial.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit standard log binomial regression using stats::glm — log_binomial","text":"model object","code":""},{"path":"/reference/log_binomial.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit standard log binomial regression using stats::glm — log_binomial","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model5 = diamonds3 %>% log_binomial(is_coloured ~ cut + carat + clarity * price) #> Warning: step size truncated due to divergence #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: step size truncated due to divergence #> Warning: step size truncated: out of bounds #> Warning: glm.fit: algorithm did not converge #> Warning: glm.fit: algorithm stopped at boundary value global_p_value(model5) #>       predictor      global.p          global.p.method #> 1           cut  4.502530e-09 Joint tests (Wald - III) #> 2         carat  0.000000e+00 Joint tests (Wald - III) #> 3       clarity 7.553908e-188 Joint tests (Wald - III) #> 5         price 2.365751e-295 Joint tests (Wald - III) #> 4 clarity:price  2.758438e-25 Joint tests (Wald - III)"},{"path":"/reference/log_binomial_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit standard log binomial regression using logbin::logbin — log_binomial_2","title":"Fit standard log binomial regression using logbin::logbin — log_binomial_2","text":"can slow simple models, handle interaction terms seem report std error. much work progress,","code":""},{"path":"/reference/log_binomial_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit standard log binomial regression using logbin::logbin — log_binomial_2","text":"","code":"log_binomial_2(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/log_binomial_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit standard log binomial regression using logbin::logbin — log_binomial_2","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/log_binomial_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit standard log binomial regression using logbin::logbin — log_binomial_2","text":"model object","code":""},{"path":"/reference/log_binomial_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit standard log binomial regression using logbin::logbin — log_binomial_2","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model5 = diamonds3 %>% log_binomial_2(is_coloured ~ cut + carat + clarity + price) #> Loading required package: doParallel #> Loading required package: foreach #> Loading required package: iterators #> Loading required package: parallel #> Loading required package: numDeriv #> Loading required package: quantreg #> Loading required package: SparseM #>  #> Attaching package: ‘SparseM’ #> The following object is masked from ‘package:base’: #>  #>     backsolve #>  #> Attaching package: ‘turboEM’ #> The following objects are masked from ‘package:numDeriv’: #>  #>     grad, hessian #> Warning: nplbin: fitted probabilities numerically 1 occurred global_p_value(model5) #>   predictor global.p          global.p.method #> 1       cut      NaN Joint tests (Wald - III) #> 2     carat      NaN Joint tests (Wald - III) #> 3   clarity      NaN Joint tests (Wald - III) #> 4     price      NaN Joint tests (Wald - III)"},{"path":"/reference/logistic_regression.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit standard logistic regression with unordered factors. — logistic_regression","title":"Fit standard logistic regression with unordered factors. — logistic_regression","text":"makes effort cast result column logical factor data type. also convert ordered predictors unordered running.","code":""},{"path":"/reference/logistic_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit standard logistic regression with unordered factors. — logistic_regression","text":"","code":"logistic_regression(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/logistic_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit standard logistic regression with unordered factors. — logistic_regression","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/logistic_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit standard logistic regression with unordered factors. — logistic_regression","text":"model object","code":""},{"path":"/reference/logistic_regression.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit standard logistic regression with unordered factors. — logistic_regression","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model5 = diamonds3 %>%    logistic_regression(is_coloured ~ cut + carat + clarity * price) model6 = ggplot2::diamonds %>%    logistic_regression(I(color <= \"F\") ~ cut + carat + clarity * price)  # this wont work as the factors are converted to unordered # model6 = ggplot2::diamonds %>%  #   logistic_regression(I(color <= \"F\") ~ I(cut<\"Very Good\") + carat + clarity * price)"},{"path":"/reference/logistic_regression_ordered.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit standard logistic regression. — logistic_regression_ordered","title":"Fit standard logistic regression. — logistic_regression_ordered","text":"makes effort cast result column logical factor data type. also model ordered factors contrasts rather polynomial expansion, allowing interpretable output ordered factors.","code":""},{"path":"/reference/logistic_regression_ordered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit standard logistic regression. — logistic_regression_ordered","text":"","code":"logistic_regression_ordered(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/logistic_regression_ordered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit standard logistic regression. — logistic_regression_ordered","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/logistic_regression_ordered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit standard logistic regression. — logistic_regression_ordered","text":"model object","code":""},{"path":"/reference/logistic_regression_ordered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit standard logistic regression. — logistic_regression_ordered","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model5 = diamonds3 %>%    logistic_regression_ordered(is_coloured ~ cut + carat + clarity * price)"},{"path":"/reference/model_function_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a configuration for multiple statistical models — model_function_provider","title":"Construct a configuration for multiple statistical models — model_function_provider","text":"multiple statistical models parameterised model fitting pipeline.","code":""},{"path":"/reference/model_function_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a configuration for multiple statistical models — model_function_provider","text":"","code":"model_function_provider(...)"},{"path":"/reference/model_function_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a configuration for multiple statistical models — model_function_provider","text":"... named list functions. simplest use case single function, see examples possibilities. functions must accept data first parameter formula second.","code":""},{"path":"/reference/model_function_provider.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a configuration for multiple statistical models — model_function_provider","text":"","code":"# in the simplest version the name is pulled from the input mfp = model_function_provider(logistic_regression) mfp #> function (name)  #> { #>     if (rlang::is_missing(name))  #>         return(names(dots)) #>     tmp = .check_index(dots, name, \"model_function_provider\") #>     return(tmp) #> } #> <bytecode: 0x55d290402940> #> <environment: 0x55d2bb4b9608> #> attr(,\"class\") #> [1] \"provider\" \"function\" mfp() #> [1] \"logistic_regression\"  mfp = model_function_provider(logistic_regression, quasi_poisson) mfp() #> [1] \"logistic_regression\" \"quasi_poisson\"        mfp2 = model_function_provider(    Logistic = modelfitter::logistic_regression,    Poisson = modelfitter::quasi_poisson ) mfp2() #> [1] \"Logistic\" \"Poisson\"    # the functions are named the other way round to normal model functions # this was by design to fit into a tidy pipeline: mfp = model_function_provider(linear = ~ stats::lm(.y,.x)) linear_model = mfp(\"linear\") iris %>% linear_model(Petal.Length ~ Petal.Width) #>  #> Call: #> stats::lm(formula = .y, data = .x) #>  #> Coefficients: #> (Intercept)  Petal.Width   #>       1.084        2.230   #>"},{"path":"/reference/model_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a table or plot row template for a set of models — model_labels","title":"Creates a table or plot row template for a set of models — model_labels","text":"produces dataframe can used arrange coefficients p-values one statistical model, set models. rows superset coefficients models designed used left_join outputs broom::tidy (term) global_p_value (predictor) construct tabular output.","code":""},{"path":"/reference/model_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a table or plot row template for a set of models — model_labels","text":"","code":"model_labels(model, label_fn, subgroup_label_fn, ...)"},{"path":"/reference/model_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a table or plot row template for a set of models — model_labels","text":"model model list models. label_fn function allows predictor label renamed. expect vector return vector length. Levels terms model function may column names, combinations thereof subgroup_label_fn function allows subgroup label renamed. expect vector return vector length. input function either factor level name combination whatever else model decides name coefficients. ... used","code":""},{"path":"/reference/model_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Creates a table or plot row template for a set of models — model_labels","text":"data frame model.order, group.order, subgroup.order, characteristic, subgroup, dplaye columns  predictor term key columns link output broom::tidy global_p_value (.e. Anova II/III outputs)","code":""},{"path":"/reference/model_labels.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Creates a table or plot row template for a set of models — model_labels","text":"expect use cases multiple univariate models + fully adjusted models passed function result displayed single plot figure.","code":""},{"path":"/reference/model_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a table or plot row template for a set of models — model_labels","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model = stats::glm(is_coloured ~ cut + carat + clarity * price, diamonds3, family=\"binomial\") model_labels(model, toupper, tolower) #> # A tibble: 21 × 9 #>    group.order model.order subgroup.order characteristic subgroup    predictor #>          <int>       <dbl>          <dbl> <chr>          <chr>       <chr>     #>  1           1           1              1 CUT            \"fair\"      cut       #>  2           1           1              2 CUT            \"good\"      cut       #>  3           1           1              3 CUT            \"very good\" cut       #>  4           1           1              4 CUT            \"premium\"   cut       #>  5           1           1              5 CUT            \"ideal\"     cut       #>  6           2           1              1 CARAT          \"\"          carat     #>  7           3           1              1 CLARITY        \"linear\"    clarity   #>  8           3           1              2 CLARITY        \"quadratic\" clarity   #>  9           3           1              3 CLARITY        \"cubic\"     clarity   #> 10           3           1              4 CLARITY        \"4th power\" clarity   #> # ℹ 11 more rows #> # ℹ 3 more variables: term <chr>, reference <lgl>, group.type <chr>   model2 = logistic_regression(diamonds3, is_coloured ~ I(cut==\"Good\") + carat + clarity * price) model_labels(model2, toupper, tolower) #> # A tibble: 19 × 9 #>    group.order model.order subgroup.order characteristic      subgroup predictor #>          <int>       <dbl>          <dbl> <chr>               <chr>    <chr>     #>  1           1           1            1   \"I(CUT == \\\"GOOD\\\"… \"\"       \"I(cut =… #>  2           2           1            1   \"CARAT\"             \"\"       \"carat\"   #>  3           3           1            1   \"CLARITY\"           \"i1\"     \"clarity\" #>  4           3           1            2   \"CLARITY\"           \"si2\"    \"clarity\" #>  5           3           1            3   \"CLARITY\"           \"si1\"    \"clarity\" #>  6           3           1            4   \"CLARITY\"           \"vs2\"    \"clarity\" #>  7           3           1            5   \"CLARITY\"           \"vs1\"    \"clarity\" #>  8           3           1            6   \"CLARITY\"           \"vvs2\"   \"clarity\" #>  9           3           1            7   \"CLARITY\"           \"vvs1\"   \"clarity\" #> 10           3           1            8   \"CLARITY\"           \"if\"     \"clarity\" #> 11           4           1            1   \"PRICE\"             \"\"       \"price\"   #> 12           5           1            1.1 \"CLARITY & PRICE\"   \"i1:pri… \"clarity… #> 13           5           1            2.1 \"CLARITY & PRICE\"   \"si2:pr… \"clarity… #> 14           5           1            3.1 \"CLARITY & PRICE\"   \"si1:pr… \"clarity… #> 15           5           1            4.1 \"CLARITY & PRICE\"   \"vs2:pr… \"clarity… #> 16           5           1            5.1 \"CLARITY & PRICE\"   \"vs1:pr… \"clarity… #> 17           5           1            6.1 \"CLARITY & PRICE\"   \"vvs2:p… \"clarity… #> 18           5           1            7.1 \"CLARITY & PRICE\"   \"vvs1:p… \"clarity… #> 19           5           1            8.1 \"CLARITY & PRICE\"   \"if:pri… \"clarity… #> # ℹ 3 more variables: term <chr>, reference <lgl>, group.type <chr>  model3 = stats::glm(is_coloured ~ carat + cut * clarity +  price, diamonds3, family=\"binomial\") model_labels(model3, toupper, tolower) #> # A tibble: 49 × 9 #>    group.order model.order subgroup.order characteristic subgroup    predictor #>          <int>       <dbl>          <dbl> <chr>          <chr>       <chr>     #>  1           1           1              1 CARAT          \"\"          carat     #>  2           2           1              1 CUT            \"fair\"      cut       #>  3           2           1              2 CUT            \"good\"      cut       #>  4           2           1              3 CUT            \"very good\" cut       #>  5           2           1              4 CUT            \"premium\"   cut       #>  6           2           1              5 CUT            \"ideal\"     cut       #>  7           3           1              1 CLARITY        \"linear\"    clarity   #>  8           3           1              2 CLARITY        \"quadratic\" clarity   #>  9           3           1              3 CLARITY        \"cubic\"     clarity   #> 10           3           1              4 CLARITY        \"4th power\" clarity   #> # ℹ 39 more rows #> # ℹ 3 more variables: term <chr>, reference <lgl>, group.type <chr>   model4 = stats::glm(   is_coloured ~ cut + carat + clarity + price,    diamonds3,    family=\"binomial\",    contrasts=list(clarity=MASS::contr.sdif))    coef(model4) #>      (Intercept)          cutGood     cutVery Good       cutPremium  #>     3.1782245915    -0.1805654156    -0.3240623074    -0.5089493830  #>         cutIdeal            carat    claritySI2-I1   claritySI1-SI2  #>    -0.5255240571    -6.6953667226    -0.8303005659    -0.8801216212  #>   clarityVS2-SI1   clarityVS1-VS2  clarityVVS2-VS1 clarityVVS1-VVS2  #>    -0.4757192720    -0.6990111856    -0.1052882540    -0.3432349687  #>   clarityIF-VVS1            price  #>    -0.6155115732     0.0006053446  model_labels(model4, toupper, tolower) #> # A tibble: 14 × 9 #>    group.order model.order subgroup.order characteristic subgroup    predictor #>          <int>       <dbl>          <dbl> <chr>          <chr>       <chr>     #>  1           1           1              1 CUT            \"fair\"      cut       #>  2           1           1              2 CUT            \"good\"      cut       #>  3           1           1              3 CUT            \"very good\" cut       #>  4           1           1              4 CUT            \"premium\"   cut       #>  5           1           1              5 CUT            \"ideal\"     cut       #>  6           2           1              1 CARAT          \"\"          carat     #>  7           3           1              1 CLARITY        \"si2-i1\"    clarity   #>  8           3           1              2 CLARITY        \"si1-si2\"   clarity   #>  9           3           1              3 CLARITY        \"vs2-si1\"   clarity   #> 10           3           1              4 CLARITY        \"vs1-vs2\"   clarity   #> 11           3           1              5 CLARITY        \"vvs2-vs1\"  clarity   #> 12           3           1              6 CLARITY        \"vvs1-vvs2\" clarity   #> 13           3           1              7 CLARITY        \"if-vvs1\"   clarity   #> 14           4           1              1 PRICE          \"\"          price     #> # ℹ 3 more variables: term <chr>, reference <lgl>, group.type <chr>  # tmp = .ordered_contrasts(diamonds3, ) # model5 = stats::glm( #   is_coloured ~ cut + carat + clarity * price,  #   diamonds3,  #   family=\"binomial\", contrasts=tmp) #    # model_labels(model5, toupper, tolower)  model6 = stats::glm(   is_coloured ~ cut + carat + clarity + price_cat,    diamonds3,    family=\"binomial\",    contrasts=list(clarity=MASS::contr.sdif, price_cat=MASS::contr.sdif) )  model_labels(model6, toupper, tolower) #> # A tibble: 17 × 9 #>    group.order model.order subgroup.order characteristic subgroup      predictor #>          <int>       <dbl>          <dbl> <chr>          <chr>         <chr>     #>  1           1           1              1 CUT            \"fair\"        cut       #>  2           1           1              2 CUT            \"good\"        cut       #>  3           1           1              3 CUT            \"very good\"   cut       #>  4           1           1              4 CUT            \"premium\"     cut       #>  5           1           1              5 CUT            \"ideal\"       cut       #>  6           2           1              1 CARAT          \"\"            carat     #>  7           3           1              1 CLARITY        \"si2-i1\"      clarity   #>  8           3           1              2 CLARITY        \"si1-si2\"     clarity   #>  9           3           1              3 CLARITY        \"vs2-si1\"     clarity   #> 10           3           1              4 CLARITY        \"vs1-vs2\"     clarity   #> 11           3           1              5 CLARITY        \"vvs2-vs1\"    clarity   #> 12           3           1              6 CLARITY        \"vvs1-vvs2\"   clarity   #> 13           3           1              7 CLARITY        \"if-vvs1\"     clarity   #> 14           4           1              1 PRICE_CAT      \"500‒999-<50… price_cat #> 15           4           1              2 PRICE_CAT      \"1000‒1999-5… price_cat #> 16           4           1              3 PRICE_CAT      \"2000‒3999-1… price_cat #> 17           4           1              4 PRICE_CAT      \"≥4000-2000‒… price_cat #> # ℹ 3 more variables: term <chr>, reference <lgl>, group.type <chr>  model7 = stats::glm(   is_coloured ~ cut + carat + clarity + splines::ns(price,df=2),    diamonds3,    family=\"binomial\",    contrasts=list(clarity=MASS::contr.sdif)) #> Warning: glm.fit: fitted probabilities numerically 0 or 1 occurred    model_labels(model7, toupper) #> # A tibble: 15 × 9 #>    group.order model.order subgroup.order characteristic      subgroup predictor #>          <int>       <dbl>          <dbl> <chr>               <chr>    <chr>     #>  1           1           1              1 CUT                 \"Fair\"   cut       #>  2           1           1              2 CUT                 \"Good\"   cut       #>  3           1           1              3 CUT                 \"Very G… cut       #>  4           1           1              4 CUT                 \"Premiu… cut       #>  5           1           1              5 CUT                 \"Ideal\"  cut       #>  6           2           1              1 CARAT               \"\"       carat     #>  7           3           1              1 CLARITY             \"SI2-I1\" clarity   #>  8           3           1              2 CLARITY             \"SI1-SI… clarity   #>  9           3           1              3 CLARITY             \"VS2-SI… clarity   #> 10           3           1              4 CLARITY             \"VS1-VS… clarity   #> 11           3           1              5 CLARITY             \"VVS2-V… clarity   #> 12           3           1              6 CLARITY             \"VVS1-V… clarity   #> 13           3           1              7 CLARITY             \"IF-VVS… clarity   #> 14           4           1              1 SPLINES::NS(PRICE,… \"1\"      splines:… #> 15           4           1              2 SPLINES::NS(PRICE,… \"2\"      splines:… #> # ℹ 3 more variables: term <chr>, reference <lgl>, group.type <chr>"},{"path":"/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":[]},{"path":"/reference/plot_regression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forest plot from a set of bootstrapped models — plot_regression","text":"","code":"plot_regression(   boots,   facet = NULL,   stat_label = \"Odds Ratio\",   report_fit = FALSE,   limit = c(NA, NA),   p.component = FALSE,   label_fn = ~.x )"},{"path":"/reference/plot_regression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forest plot from a set of bootstrapped models — plot_regression","text":"boots set bootstrapped model fits output run_models facet faceting variable (usually `modelName``) stat_label call x axis report_fit components model performance statistics want report limit x axis limits p.component indicate component parts fit significant label_fn function (lambda) accepts vector returns vector","code":""},{"path":"/reference/plot_regression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Forest plot from a set of bootstrapped models — plot_regression","text":"ggplot","code":""},{"path":"/reference/pmixnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"The cumulative density function of a mixture of normal distributions — pmixnorm","title":"The cumulative density function of a mixture of normal distributions — pmixnorm","text":"cumulative density function mixture normal distributions","code":""},{"path":"/reference/pmixnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The cumulative density function of a mixture of normal distributions — pmixnorm","text":"","code":"pmixnorm(q, means, sds, weights = rep(1, length(means)), na.rm = FALSE)"},{"path":"/reference/pmixnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The cumulative density function of a mixture of normal distributions — pmixnorm","text":"q vector quantiles. means vector normal distribution means sds vector normal distribution sds weights vector weights na.rm remove distributions NA mean sd","code":""},{"path":"/reference/pmixnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The cumulative density function of a mixture of normal distributions — pmixnorm","text":"pdf mixture distribution.","code":""},{"path":"/reference/pmixnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The cumulative density function of a mixture of normal distributions — pmixnorm","text":"","code":"pmixnorm(q=c(2,20), means=c(10,13,14), sds=c(1,1,2), weights=c(2,2,3)) #> [1] 4.228235e-10 9.994215e-01"},{"path":"/reference/qmixnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"A quantile function for a mixture of normal distributions — qmixnorm","title":"A quantile function for a mixture of normal distributions — qmixnorm","text":"quantile function mixture normal distributions","code":""},{"path":"/reference/qmixnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A quantile function for a mixture of normal distributions — qmixnorm","text":"","code":"qmixnorm(p, means, sds, weights = rep(1, length(means)), na.rm = FALSE)"},{"path":"/reference/qmixnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A quantile function for a mixture of normal distributions — qmixnorm","text":"p vector probabilities. means vector normal distribution means sds vector normal distribution sds weights vector weights na.rm remove distributions NA values mean sd","code":""},{"path":"/reference/qmixnorm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A quantile function for a mixture of normal distributions — qmixnorm","text":"value yth quantile","code":""},{"path":"/reference/qmixnorm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A quantile function for a mixture of normal distributions — qmixnorm","text":"","code":"qmixnorm(p=c(0.025,0.5,0.975), means=c(10,13,14), sds=c(1,1,2)) #>   Q.0.025     Q.0.5   Q.0.975  #>  8.537776 12.443750 16.879802"},{"path":"/reference/quasi_poisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit standard poisson regression — quasi_poisson","title":"Fit standard poisson regression — quasi_poisson","text":"roughly equivalent log_binomial model converges well. output can interpreted RR. using stats::glm log link function family quasipoisson. binary outcome interpreted count true 1 false 0.","code":""},{"path":"/reference/quasi_poisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit standard poisson regression — quasi_poisson","text":"","code":"quasi_poisson(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/quasi_poisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit standard poisson regression — quasi_poisson","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/quasi_poisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit standard poisson regression — quasi_poisson","text":"model object","code":""},{"path":"/reference/quasi_poisson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit standard poisson regression — quasi_poisson","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model5 = diamonds3 %>% quasi_poisson(is_coloured ~ cut + carat + clarity + price) global_p_value(model5) #> # A tibble: 4 × 3 #>   predictor global.p global.p.method            #>   <chr>        <dbl> <chr>                      #> 1 cut       1.28e-33 Likelihood ratio test (II) #> 2 carat     0        Likelihood ratio test (II) #> 3 clarity   0        Likelihood ratio test (II) #> 4 price     0        Likelihood ratio test (II)"},{"path":"/reference/quasi_poisson_ordered.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit standard poisson regression with ordered contrasts — quasi_poisson_ordered","title":"Fit standard poisson regression with ordered contrasts — quasi_poisson_ordered","text":"roughly equivalent log_binomial model converges well. output can interpreted RR. using stats::glm log link function family quasipoisson. binary outcome interpreted count true 1 false 0. Ordered variables represented contrasts adjacent levels","code":""},{"path":"/reference/quasi_poisson_ordered.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit standard poisson regression with ordered contrasts — quasi_poisson_ordered","text":"","code":"quasi_poisson_ordered(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/quasi_poisson_ordered.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit standard poisson regression with ordered contrasts — quasi_poisson_ordered","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/quasi_poisson_ordered.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit standard poisson regression with ordered contrasts — quasi_poisson_ordered","text":"model object","code":""},{"path":"/reference/quasi_poisson_ordered.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit standard poisson regression with ordered contrasts — quasi_poisson_ordered","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model5 = diamonds3 %>% quasi_poisson_ordered(is_coloured ~ cut + carat + clarity + price) summary(model5) #>  #> Call: #> stats::glm(formula = formula, family = stats::quasipoisson(link = log),  #>     data = data, contrasts = .ordered_contrasts(data, formula)) #>  #> Coefficients: #>                    Estimate Std. Error t value Pr(>|t|)     #> (Intercept)       5.815e-01  3.063e-02  18.983  < 2e-16 *** #> cutGood          -8.685e-02  3.036e-02  -2.861  0.00423 **  #> cutVery Good     -1.346e-01  2.856e-02  -4.713 2.45e-06 *** #> cutPremium       -2.238e-01  2.845e-02  -7.867 3.68e-15 *** #> cutIdeal         -2.167e-01  2.810e-02  -7.710 1.28e-14 *** #> carat            -2.855e+00  3.179e-02 -89.807  < 2e-16 *** #> claritySI2-I1    -2.728e-01  4.333e-02  -6.296 3.08e-10 *** #> claritySI1-SI2   -3.393e-01  1.371e-02 -24.739  < 2e-16 *** #> clarityVS2-SI1   -1.802e-01  1.252e-02 -14.394  < 2e-16 *** #> clarityVS1-VS2   -3.100e-01  1.496e-02 -20.723  < 2e-16 *** #> clarityVVS2-VS1  -1.843e-02  1.860e-02  -0.991  0.32174     #> clarityVVS1-VVS2 -1.659e-01  2.222e-02  -7.469 8.19e-14 *** #> clarityIF-VVS1   -3.946e-01  3.326e-02 -11.864  < 2e-16 *** #> price             2.505e-04  3.273e-06  76.538  < 2e-16 *** #> --- #> Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1 #>  #> (Dispersion parameter for quasipoisson family taken to be 0.4898267) #>  #>     Null deviance: 37886  on 53939  degrees of freedom #> Residual deviance: 33075  on 53926  degrees of freedom #> AIC: NA #>  #> Number of Fisher Scoring iterations: 5 #>"},{"path":"/reference/raw_data_provider.html","id":null,"dir":"Reference","previous_headings":"","what":"Provide a access to a dataset — raw_data_provider","title":"Provide a access to a dataset — raw_data_provider","text":"Provide access dataset","code":""},{"path":"/reference/raw_data_provider.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Provide a access to a dataset — raw_data_provider","text":"","code":"raw_data_provider(data, formulae = ~.)"},{"path":"/reference/raw_data_provider.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Provide a access to a dataset — raw_data_provider","text":"data data frame formulae list formulae columns used","code":""},{"path":"/reference/raw_data_provider.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Provide a access to a dataset — raw_data_provider","text":"function returns dataset","code":""},{"path":"/reference/robust_poisson.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit robust poisson regression using sandwich estimators — robust_poisson","title":"Fit robust poisson regression using sandwich estimators — robust_poisson","text":"roughly equivalent log_binomial model converges well. output can interpreted RR. using glm log link function family poisson robust sandwich estimators. binary outcome interpreted count true 1 false 0.","code":""},{"path":"/reference/robust_poisson.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit robust poisson regression using sandwich estimators — robust_poisson","text":"","code":"robust_poisson(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/robust_poisson.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit robust poisson regression using sandwich estimators — robust_poisson","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/robust_poisson.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit robust poisson regression using sandwich estimators — robust_poisson","text":"model object","code":""},{"path":"/reference/robust_poisson.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit robust poisson regression using sandwich estimators — robust_poisson","text":"heteroskedasticity-consistent (HC) standard errors using sandwich: https://data.library.virginia.edu/understanding-robust-standard-errors/","code":""},{"path":"/reference/robust_poisson.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit robust poisson regression using sandwich estimators — robust_poisson","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model5 = diamonds3 %>% robust_poisson(is_coloured ~ cut + carat + clarity + price) global_p_value(model5) #> Coefficient covariances computed by function(m) sandwich::vcovHC(m, type = \"HC1\") #> # A tibble: 4 × 3 #>   predictor global.p global.p.method             #>   <chr>        <dbl> <chr>                       #> 1 cut       1.56e-36 Wald Chi-squared test (III) #> 2 carat     0        Wald Chi-squared test (III) #> 3 clarity   0        Wald Chi-squared test (III) #> 4 price     0        Wald Chi-squared test (III)"},{"path":"/reference/robust_poisson_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit robust poisson regression using geepack::glm — robust_poisson_2","title":"Fit robust poisson regression using geepack::glm — robust_poisson_2","text":"equivalent log_binomial model","code":""},{"path":"/reference/robust_poisson_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit robust poisson regression using geepack::glm — robust_poisson_2","text":"","code":"robust_poisson_2(   data,   formula,   positive = c(\"yes\", \"true\", \"present\", \"confirmed\"),   ... )"},{"path":"/reference/robust_poisson_2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit robust poisson regression using geepack::glm — robust_poisson_2","text":"data data frame formula formula form binary_outcome ~ obs1 + obs2 + ... positive test strings interpret true outcome factor logical. ... used","code":""},{"path":"/reference/robust_poisson_2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit robust poisson regression using geepack::glm — robust_poisson_2","text":"model object","code":""},{"path":"/reference/robust_poisson_2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit robust poisson regression using geepack::glm — robust_poisson_2","text":"","code":"diamonds3 = ggplot2::diamonds %>% dplyr::mutate(   is_coloured = color <= \"F\",   cut = factor(cut,ordered=FALSE),   price_cat = tableone::cut_integer(price, c(500,1000,2000,4000)) ) %>% dplyr::select(-color)  model5 = diamonds3 %>% robust_poisson_2(is_coloured ~ cut + carat + clarity + price) global_p_value(model5) #>   predictor    global.p          global.p.method #> 1       cut 1.52852e-36 Joint tests (Wald - III) #> 2     carat 0.00000e+00 Joint tests (Wald - III) #> 3   clarity 0.00000e+00 Joint tests (Wald - III) #> 4     price 0.00000e+00 Joint tests (Wald - III)"},{"path":[]},{"path":"/reference/run_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a model through the modelfitter pipeline — run_model","text":"","code":"run_model(   data,   formula,   modelFunction = logistic_regression,   ...,   modelName = .fmt_form(formula) )"},{"path":"/reference/run_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a model through the modelfitter pipeline — run_model","text":"data single dataframe formula model formula modelFunction type test function call. function must accept data formula inputs produce output compatible broom::tidy broom::glance ... can used provide parameters modelFunction. modelName optional (recommended) name model","code":""},{"path":"/reference/run_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a model through the modelfitter pipeline — run_model","text":"dataframe result running formulae bootstrapped imputations adn summary stats","code":""},{"path":"/reference/run_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run a model through the modelfitter pipeline — run_model","text":"","code":"# stats::lm( Petal.Length ~ Species + Petal.Width, iris)  # boots = iris %>% run_model(Petal.Length ~ Species + Petal.Width, stats::lm)"},{"path":[]},{"path":"/reference/run_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run a set of models — run_models","text":"","code":"run_models(   imputedData,   modelConfig,   modelFunction = logistic_regression,   pipeline = ~.x,   ... )"},{"path":"/reference/run_models.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run a set of models — run_models","text":"imputedData mice imputed data source modelConfig dataframe column form containing formulae test, columns containing metadata. provided modelName used label model plots (otherwise formula) used modelFunction type test function call. function must accept data formula inputs pipeline pipeline function (.e. takes dataframe returns dataframe) can used modify imputed data ... can used provide parameters modelFunction.","code":""},{"path":"/reference/run_models.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run a set of models — run_models","text":"dataframe result running formulae bootstrapped imputations adn summary stats","code":""},{"path":"/reference/spline_term_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Spline term marginal effects plot — spline_term_plot","title":"Spline term marginal effects plot — spline_term_plot","text":"Spline term marginal effects plot","code":""},{"path":"/reference/spline_term_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spline term marginal effects plot — spline_term_plot","text":"","code":"spline_term_plot(   coxmodel,   var_name,   xlab = var_name,   max_y = NULL,   n_breaks = 7 )"},{"path":"/reference/spline_term_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spline term marginal effects plot — spline_term_plot","text":"coxmodel output coxph model var_name variable involved spline term xlab x axis label max_y maximium hazard ratio display y axis. Inferred central estimates missing, likely cut confidence intervals n_breaks number divisions y axis","code":""},{"path":"/reference/spline_term_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spline term marginal effects plot — spline_term_plot","text":"ggplot","code":""},{"path":"/reference/sprintf_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Sprintf with a list input — sprintf_list","title":"Sprintf with a list input — sprintf_list","text":"variant sprintf work well inputs format list. Good examples quantile functions","code":""},{"path":"/reference/sprintf_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sprintf with a list input — sprintf_list","text":"","code":"sprintf_list(format, params, na.replace = \"―\")"},{"path":"/reference/sprintf_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sprintf with a list input — sprintf_list","text":"format format string params inputs list (rather set individual numbers) na.replace value replace NA values .","code":""},{"path":"/reference/sprintf_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sprintf with a list input — sprintf_list","text":"formatted string","code":""},{"path":"/reference/sprintf_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sprintf with a list input — sprintf_list","text":"","code":"library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.2     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.0 #> ✔ ggplot2   3.4.4     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.0 #> ✔ purrr     1.0.1      #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ purrr::accumulate() masks foreach::accumulate() #> ✖ dplyr::filter()     masks stats::filter() #> ✖ dplyr::lag()        masks stats::lag() #> ✖ purrr::when()       masks foreach::when() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors # generate a mixture confidence interval from a set of distributions sprintf_list(\"%1.2f [%1.2f\\u2013%1.2f]\",  qmixnorm(p=c(0.5,0.025,0.975),  means=c(10,13,14), sds=c(1,1,2))) #> [1] \"12.44 [8.54–16.88]\""},{"path":[]},{"path":"/reference/summarise_boots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printable output of model combined — summarise_boots","text":"","code":"summarise_boots(boots, ..., statistic = \"OR\", global.p = TRUE, inv_link = NULL)"},{"path":"/reference/summarise_boots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printable output of model combined — summarise_boots","text":"boots bootstrapped model output ... columns using predictors, list formulae (rhs), tidyselect call, dplyr::vars() specification list characters statistic RR (HR) just used labelling global.p present global p value (anova) rather line line value.","code":""},{"path":"/reference/summarise_boots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printable output of model combined — summarise_boots","text":"printable summary","code":""},{"path":"/reference/summarise_boots.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printable output of model combined — summarise_boots","text":"","code":"# out = boots %>% summarise_boots(...predictors..., \"OR\" ) #  boot = iris %>%  #   dplyr::mutate(is_versicolor = Species == \"versicolor\") %>%  #   run_model(is_versicolor ~ Petal.Length + Petal.Width + Sepal.Length + Sepal.Width) #    #  out = summarise_boots(boot) #  out %>% ggrrr::hux_tidy( #    rowGroupVars = dplyr::vars(Characteristic,Group), #    colGroupVars = dplyr::vars(modelName) #  )"},{"path":"/reference/summarise_fits.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise a modelfitter execution — summarise_fits","title":"Summarise a modelfitter execution — summarise_fits","text":"modelfitter execution may consist multiple models, multiple data sets, multiple bootstraps data imputations data. summarises coefficients, global p values performance metrics model fit multiple data bootstraps get single set coefficients, metrics different model.","code":""},{"path":"/reference/summarise_fits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise a modelfitter execution — summarise_fits","text":"","code":"summarise_fits(exectn, ...)"},{"path":"/reference/summarise_fits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise a modelfitter execution — summarise_fits","text":"exectn modelfitter execution multiple model fits. ... used present","code":""},{"path":"/reference/summarise_fits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise a modelfitter execution — summarise_fits","text":"nested dataframe single row per model summary columns coef_summary, global_p_summary ","code":""},{"path":"/reference/summarise_fits.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise a modelfitter execution — summarise_fits","text":"Coefficients combined assuming normally distributed beta coefficients, prior link function inversion, mixtures normal distributions 95% confidence intervals calculated. performance metrics global p values given means values bootstrap.","code":""},{"path":"/reference/summarise_fits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise a modelfitter execution — summarise_fits","text":"","code":"# Complex example, multiple statsistical models, multiple formulae, # bootstrapped data. cfg  = configure_models(    formula_provider(       \"<F\" = I(color < \"F\") ~ cut + carat + clarity + price,       \"<H\" = I(color < \"H\") ~ cut + carat + clarity + price    ),    bootstrap_provider(ggplot2::diamonds, max_n = 10),    model_function_provider(      \"Log reg\" = modelfitter::logistic_regression,      \"Poisson\" = modelfitter::quasi_poisson    ) )  exectn = cfg %>% execute_configuration(cache = TRUE) #> using cached item: ~/.cache/modelfitter/cached-7ee20ca4c523103b2fe5534cbeca6990-8e527bf9579174643babc6f473d5732f.rda summfit = exectn %>% summarise_fits()   # Simple example tmp = configure_model(   \"Iris\", I(Species == \"versicolor\") ~ ., iris, logistic_regression) tmp2 = tmp %>% execute_configuration() #> caching item: ~/.cache/modelfitter/cached-7ee20ca4c523103b2fe5534cbeca6990-81eb709f281fe75d1a492a891145bf7b.rda summfit = tmp2 %>% summarise_fits()"},{"path":"/reference/univariate_from_multivariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert multivariate formula to list of univariate formulae — univariate_from_multivariate","title":"Convert multivariate formula to list of univariate formulae — univariate_from_multivariate","text":"Convert multivariate formula list univariate formulae","code":""},{"path":"/reference/univariate_from_multivariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert multivariate formula to list of univariate formulae — univariate_from_multivariate","text":"","code":"univariate_from_multivariate(formula)"},{"path":"/reference/univariate_from_multivariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert multivariate formula to list of univariate formulae — univariate_from_multivariate","text":"formula formula type y ~ x1 + x2 + x3 + ....","code":""},{"path":"/reference/univariate_from_multivariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert multivariate formula to list of univariate formulae — univariate_from_multivariate","text":"list formulae type y ~ x1, y ~ x2, y ~ x3, ....","code":""},{"path":"/reference/univariate_from_multivariate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert multivariate formula to list of univariate formulae — univariate_from_multivariate","text":"","code":"univariate_from_multivariate(y ~ x1 + x2 + x3) #> [[1]] #> y ~ x1 #> <environment: 0x55d299417be8> #>  #> [[2]] #> y ~ x2 #> <environment: 0x55d29940d7f8> #>  #> [[3]] #> y ~ x3 #> <environment: 0x55d2991f2c08> #>  univariate_from_multivariate(~ x1 + x2 + x3) #> [[1]] #> NULL ~ x1 #> <environment: 0x55d29b753e40> #>  #> [[2]] #> NULL ~ x2 #> <environment: 0x55d29948b930> #>  #> [[3]] #> NULL ~ x3 #> <environment: 0x55d297d87dd0> #>"}]
